//------------------------------------------------------------------------------
// Note : BASE ADV SYSTEM
// Data : 2010/04/27
// File : BaseObject.tjs
// Creator : Kazuyuki Uchino
// Memo : Base Window Class
//------------------------------------------------------------------------------

@if(__BASEOBJECT_TJS__ == 0)
@set(__BASEOBJECT_TJS__ = 1)


class BaseObject extends Window {
	
	
	/*-----------------------------------------
	◆ クラス オブジェクト
	-----------------------------------------*/
	
	//MainWindow
	var MainWnd;
	
	//PrimaryLayer
	var PriLayer;
	
	//削除オブジェクト
	var DeleteObject;
	
	
	
	
	
	/*-----------------------------------------
	◆コンストラクタ
	
	引数：
	wnd	メインウィンドウオブジェクト
	
	pri	プライマリレイヤ
	
	-----------------------------------------*/
	function BaseObject(wnd, pri)
	{
		//Main Window
		MainWnd = wnd;
		
		//PrimaryLayer
		PriLayer= pri;
		
		//削除オブジェクトを初期化
		DeleteObject = void;
		
	}
	
	
	
	
	/*-----------------------------------------
	◆ファイナライズ
	
	引数：
	-----------------------------------------*/
	function finalize()
	{
		invalidate DeleteObject;
	}
	
	
	
	
	
	/*-----------------------------------------
	◆イベント取得関数
	
	引数：
	なし
	
	説明：
	Idol状態に呼び出される関数
	
	-----------------------------------------*/
	function DefaultAction(){ }
	
	
	
	
	
	
	/*-----------------------------------------
	◆イベント取得関数
	
	引数：
	なし
	
	説明：
	Mouse Upを処理するハンドラ
	
	-----------------------------------------*/
	function LeftMouseUpAction(){ }
	
	
	
	
	
	/*-----------------------------------------
	◆RightMouseUpAction関数
	
	引数：
	無し
	
	説明：
	このクラスオブジェクトのRightMouseUpAction
	
	-----------------------------------------*/
	function RightMouseUpAction(){ }
	
	
	
	
	
	
	
	/*-----------------------------------------
	◆MiddleMouseUpAction関数
	
	引数：
	無し
	
	説明：
	このクラスオブジェクトのRightMouseUpAction
	
	-----------------------------------------*/
	function MiddleMouseUpAction(){ }
	
	
	
	
	
	
	
	/*-----------------------------------------
	◆イベント取得関数
	
	引数：
	なし
	
	説明：
	Mouse Upを処理するハンドラ
	
	-----------------------------------------*/
	function LeftMouseDownAction(){ }
	
	
	
	
	
	/*-----------------------------------------
	◆RightMouseDownAction関数
	
	引数：
	無し
	
	説明：
	このクラスオブジェクトのRightMouseDownAction
	
	-----------------------------------------*/
	function RightMouseDownAction(){ }
	
	
	
	
	
	
	
	/*-----------------------------------------
	◆MiddleMouseDownAction関数
	
	引数：
	無し
	
	説明：
	このクラスオブジェクトのRightMouseDownAction
	
	-----------------------------------------*/
	function MiddleMouseDownAction(){ }
	
	
	
	
	
	
	/*-----------------------------------------
	◆MouseDown関数
	
	引数：
	無し
	
	説明：
	このクラスオブジェクトのMouseDown
	
	-----------------------------------------*/
	function MouseDown(x, y, button, shift){ }
	
	
	
	
	
	/*-----------------------------------------
	◆KeyUpAction関数
	
	引数：
	key			仮想キーコード
	
	shift		同時キー
	
	process		default処理の有無
	
	説明：
	Key Upを処理するハンドラ
	
	-----------------------------------------*/
	function KeyUpAction(key, shift, process){ }
	
	
	
	
	
	
	/*-----------------------------------------
	◆KeyDownAction関数
	
	引数：
	key			仮想キーコード
	
	shift		同時キー
	
	process		default処理の有無
	
	説明：
	Key Upを処理するハンドラ
	
	-----------------------------------------*/
	function KeyDownAction(key, shift, process){ }
	
	
	
	
	
	
	
	/*-----------------------------------------
	◆イベント取得関数
	
	引数：
	なし
	
	説明：
	Mouse Moveを処理するハンドラ
	
	-----------------------------------------*/
	function MouseMoveAction(x, y, shift){ }
	
	
	
	
	
	/*-----------------------------------------
	◆イベント取得関数
	
	引数：
	shift	同時キー
	
	delta	方向：正:奥　負:手前
	
	x		X座標
	
	y		Y座標
	
	説明：
	Mouse Wheelを処理するハンドラ
	
	-----------------------------------------*/
	function MouseWheelAction(shift, delta, x, y){ }
	
	
	
	
	
	/*-----------------------------------------
	●イベント関数
	
	引数：
	なし
	
	説明：
	描画される直前に呼ばれる自前関数
	
	-----------------------------------------*/
	function PaintAction(){ }
	
	
	
	
	
	
	/*-----------------------------------------
	◆イベント取得関数
	
	引数：
	key 　入力された文字です。
	
	process 	親クラスのonKeyPressを呼ぶ際、
				この引数に偽を渡すと、親クラスでは そのキーに
				対するデフォルトの処理(フォーカスの移動など)を
				行わなくなります。
	
	説明：
	Layer、WaveSoundなどのイベントが返される
	
	-----------------------------------------*/
	function KeyPress(key, process){ }
	
	
	
	
	
	
	/*-----------------------------------------
	◆オブジェクト削除関数
	
	引数：
	obj			イベントの発生先を指定します。
	
	workfunc 	obj で指定したイベントの発生先オブジェクトで、
				イベントを受け取るメソッド名を指定します。
				空文字列を指定すると obj はメソッドとみなされ、
				イベントの発生ごとに owner が直接呼ばれます。
	
	説明：
	削除処理関数を呼び出す
	
	-----------------------------------------*/	
	function DeleteWork( obj, workfunc = "" )
	{
		if(DeleteObject !== void)return;
		
		DeleteObject = new AsyncTrigger(obj, workfunc);
		
		DeleteObject.cached = true;
		
		DeleteObject.trigger();
	}
	
}





@endif


